import nodemailer from "nodemailer";

const transporter = nodemailer.createTransport({
  service: "gmail", // ho·∫∑c smtp kh√°c
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS
  }
});

export const sendEmailBlock = async (to, subject, html) => {
  try {
    await transporter.sendMail({
      from: `"Sneaker Trend" <${process.env.EMAIL_USER}>`,
      to,
      subject,
      html,
    });
  } catch (error) {
    console.error("L·ªói g·ª≠i email:", error);
  }
};

export const sendOTP = async (email, otp) => {
  await transporter.sendMail({
    from: `"Support" <${process.env.EMAIL_USER}>`,
    to: email,
    subject: "M√£ OTP x√°c th·ª±c",
    text: `M√£ OTP c·ªßa b·∫°n l√†: ${otp}. H·∫øt h·∫°n trong 5 ph√∫t.`,
  });
};

export const sendEmailOrder = async (to, order, orderItems) => {
  try {
    const formatCurrency = (value) =>
      (value || 0).toLocaleString("vi-VN") + " ƒë";

    const formatDateTime = (date) =>
      new Date(date).toLocaleString("vi-VN", { hour12: false });

    const shippingFee = order.phiShip ?? order.shipping_fee ?? 0;

    const itemsHtml = orderItems
      .map(
        (item) => `
        <tr>
          <td style="padding:8px;border:1px solid #ddd;text-align:center;">
            ${item.product_id?.name || "S·∫£n ph·∫©m"} 
          </td>
          <td style="padding:8px;border:1px solid #ddd;text-align:center;">
          ${item.variant_id?.color?.name || ""}
          </td>
          <td style="padding:8px;border:1px solid #ddd;text-align:center;">
          ${item.variant_id?.size?.size || ""}
          </td>
          <td style="padding:8px;border:1px solid #ddd;text-align:center;">
            ${item.quantity}
          </td>
          <td style="padding:8px;border:1px solid #ddd;text-align:center;">
            ${formatCurrency(item.price)}
          </td>
          <td style="padding:8px;border:1px solid #ddd;text-align:center;">
            ${formatCurrency((item.price || 0) * item.quantity)}
          </td>
        </tr>
      `
      )
      .join("");

    let shippingInfo = "";
    if (order.shipping_address && typeof order.shipping_address === "object") {
      shippingInfo = `
    <p><b>Ng∆∞·ªùi nh·∫≠n:</b> ${order.shipping_address.full_name || ""}</p>
    <p><b>SƒêT:</b> ${order.shipping_address.phone || ""}</p>
    <p><b>ƒê·ªãa ch·ªâ:</b> ${order.shipping_address.address || ""}, 
      ${order.shipping_address.ward || ""}, 
      ${order.shipping_address.district || ""}, 
      ${order.shipping_address.city || ""}
    </p>
  `;
    } else {
      // shipping_address l√† chu·ªói => parse t·∫°m
      const parts = (order.shipping_address || "").split(" - ");
      shippingInfo = `
    <p><b>Ng∆∞·ªùi nh·∫≠n:</b> ${parts[0] || ""}</p>
    <p><b>SƒêT:</b> ${parts[1] || ""}</p>
    <p><b>ƒê·ªãa ch·ªâ:</b> ${parts[2] || ""}</p>
  `;
    }

    const html = `
      <div style="font-family:Arial,sans-serif;line-height:1.6;color:#333;">
        <h2 style="color:#2c3e50;">
          C·∫£m ∆°n b·∫°n ƒë√£ mua h√†ng t·∫°i <span style="color:#e67e22;">Sneaker Trend</span>!
        </h2>
        
        <p><b>M√£ ƒë∆°n h√†ng:</b> ${order.order_code || order._id}</p>
        <p><b>Ng√†y ƒë·∫∑t:</b> ${formatDateTime(order.createdAt)}</p>
        
        <h3 style="margin-top:20px;">Chi ti·∫øt ƒë∆°n h√†ng</h3>
        <table style="width:100%;border-collapse:collapse;margin-bottom:20px;">
          <thead>
            <tr style="background:#f2f2f2;">
              <th style="padding:8px;border:1px solid #ddd;">S·∫£n ph·∫©m</th>   
              <th style="padding:8px;border:1px solid #ddd;">M√†u s·∫Øc</th>
              <th style="padding:8px;border:1px solid #ddd;">K√≠ch c·ª°</th>
              <th style="padding:8px;border:1px solid #ddd;">S·ªë l∆∞·ª£ng</th>
              <th style="padding:8px;border:1px solid #ddd;">ƒê∆°n gi√°</th>
              <th style="padding:8px;border:1px solid #ddd;">Th√†nh ti·ªÅn</th>
            </tr>
          </thead>
          <tbody>
            ${itemsHtml}
          </tbody>
        </table>

        <p><b>T·∫°m t√≠nh:</b> ${formatCurrency(order.tongGoc || order.sub_total)}</p>
        <p><b>Gi·∫£m gi√°:</b> ${formatCurrency(order.giamGia || order.voucher_discount)}</p>
        <p><b>Ph√≠ v·∫≠n chuy·ªÉn:</b> ${formatCurrency(shippingFee)}</p>
        <p style="font-size:16px;">
          <b>T·ªïng thanh to√°n:</b> 
          <span style="color:#e74c3c;">${formatCurrency(order.tongThanhToan || order.total_price)}</span>
        </p>

        <h3 style="margin-top:20px;">Th√¥ng tin giao h√†ng</h3>
        ${shippingInfo}

        <p style="margin-top:30px;">N·∫øu c√≥ th·∫Øc m·∫Øc v·ªÅ ƒë∆°n h√†ng, vui l√≤ng li√™n h·ªá <b>hotline 1900 xxx xxx</b>.</p>
        <p>Tr√¢n tr·ªçng,<br><b>Sneaker Trend</b></p>
      </div>
    `;

    await transporter.sendMail({
      from: `"Sneaker Trend" <${process.env.EMAIL_USER}>`,
      to,
      subject: `[Sneaker Trend] X√°c nh·∫≠n ƒë∆°n h√†ng #${order.order_code || order._id}`,
      html,
    });
    console.log(`üìß Email x√°c nh·∫≠n ƒë∆°n h√†ng g·ª≠i t·ªõi ${to} th√†nh c√¥ng`);
  } catch (error) {
    console.error("‚ùå G·ª≠i email ƒë∆°n h√†ng th·∫•t b·∫°i:", error.message);
  }
};




